<?xml version="1.0" encoding="UTF-8"?>
<definitions
  xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
  xmlns:extension="http://test.org/schema/1.0/bpmn"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  targetNamespace="http://test.org/test">

  <process id="process"
      extension:candidateStarterGroups="group1, ${group2(a, b)}, group3"
      extension:candidateStarterUsers="user1, ${user2(a, b)}, user3"
      extension:jobPriority="15"
      extension:taskPriority="13"
      extension:historyTimeToLive="5"
      extension:isStartableInTasklist="false"
      extension:versionTag="v1.0.0">
    <extensionElements>
      <extension:executionListener event="start" class="org.test.test.Test"/>
    </extensionElements>

    <startEvent id="startEvent"
        extension:initiator="test"
        extension:formHandlerClass="org.test.test.Test"
        extension:formKey="test"
        extension:asyncBefore="true"
        extension:asyncAfter="true"
        extension:jobPriority="${test}">
      <extensionElements>
        <extension:executionListener event="start" expression="${test}"/>
        <extension:potentialStarter>
          <resourceAssignmentExpression>
            <formalExpression>group1, ${group2(a, b)}, group3</formalExpression>
          </resourceAssignmentExpression>
        </extension:potentialStarter>
        <extension:formProperty id="test" name="test" type="test" variable="test" expression="${test}" datePattern="test" default="test"/>
      </extensionElements>
      <errorEventDefinition extension:errorCodeVariable="errorVariable" extension:errorMessageVariable="errorMessageVariable"/>
    </startEvent>

    <sequenceFlow id="sequenceFlow" sourceRef="startEvent" targetRef="userTask">
      <extensionElements>
        <extension:executionListener>
          <extension:script scriptFormat="groovy">println 'Hello World'</extension:script>
        </extension:executionListener>
      </extensionElements>
    </sequenceFlow>

    <userTask id="userTask"
        extension:assignee="test"
        extension:async="true"
        extension:asyncBefore="true"
        extension:asyncAfter="true"
        extension:candidateGroups="group1, ${group2(a, b)}, group3"
        extension:candidateUsers="user1, ${user2(a, b)}, user3"
        extension:dueDate="2014-02-27"
        extension:exclusive="false"
        extension:formHandlerClass="org.test.test.Test"
        extension:formKey="test"
        extension:priority="12"
        extension:jobPriority="${test}">
      <extensionElements>
        <extension:taskListener event="create" class="org.test.test.Test" expression="${test}" delegateExpression="${org.test.test.Test}">
          <extension:field name="test">
            <extension:string>test</extension:string>
          </extension:field>
          <timerEventDefinition>
            <timeDuration xsi:type="tFormalExpression">PT1H</timeDuration>
          </timerEventDefinition>
        </extension:taskListener>
        <extension:taskListener>
          <extension:script scriptFormat="groovy" resource="test.groovy" />
        </extension:taskListener>
        <extension:formData>
          <extension:formField id="test" label="test" type="test" datePattern="test" defaultValue="test">
            <extension:properties>
              <extension:property id="test" value="test"/>
            </extension:properties>
            <extension:validation>
              <extension:constraint name="test" config="test"/>
            </extension:validation>
            <extension:value id="test" name="test"/>
          </extension:formField>
        </extension:formData>
      </extensionElements>
    </userTask>

    <serviceTask id="serviceTask"
        extension:expression="${test}"
        extension:class="org.test.test.Test"
        extension:delegateExpression="${org.test.test.Test}"
        extension:resultVariable="test"
        extension:type="mail"
        extension:topic="test"
        extension:taskPriority="${test}">
      <extensionElements>
        <extension:executionListener event="start" delegateExpression="${org.test.test.Test}"/>
        <extension:connector>
          <extension:connectorId>soap-http-connector</extension:connectorId>
          <extension:inputOutput>
            <extension:inputParameter name="endpointUrl">http://example.com/webservice</extension:inputParameter>
            <extension:outputParameter name="result">output</extension:outputParameter>
          </extension:inputOutput>
        </extension:connector>
        <extension:inputOutput>
          <extension:inputParameter name="shouldBeNull"/>
          <extension:inputParameter name="shouldBeConstant">foo</extension:inputParameter>
          <extension:inputParameter name="shouldBeExpression">${1 + 1}</extension:inputParameter>
          <extension:inputParameter name="shouldBeList">
            <extension:list>
              <extension:value>a</extension:value>
              <extension:value>b</extension:value>
              <extension:value>c</extension:value>
            </extension:list>
          </extension:inputParameter>
          <extension:inputParameter name="shouldBeMap">
            <extension:map>
              <extension:entry key="foo">bar</extension:entry>
              <extension:entry key="hello">world</extension:entry>
            </extension:map>
          </extension:inputParameter>
          <extension:inputParameter name="shouldBeScript">
            <extension:script scriptFormat="groovy">1 + 1</extension:script>
          </extension:inputParameter>
          <extension:outputParameter name="nested">
            <extension:list>
              <extension:value>
                <extension:list>
                  <extension:value>list</extension:value>
                  <extension:value>list</extension:value>
                </extension:list>
              </extension:value>
              <extension:value>
                <extension:map>
                  <extension:entry key="list">
                    <extension:list>
                      <extension:value>map</extension:value>
                      <extension:value>map</extension:value>
                      <extension:value>map</extension:value>
                    </extension:list>
                  </extension:entry>
                  <extension:entry key="map">
                    <extension:map>
                      <extension:entry key="so">nested</extension:entry>
                    </extension:map>
                  </extension:entry>
                </extension:map>
              </extension:value>
            </extension:list>
          </extension:outputParameter>
        </extension:inputOutput>
      </extensionElements>
    </serviceTask>

    <sendTask id="sendTask">
      <extensionElements>
        <extension:failedJobRetryTimeCycle>test</extension:failedJobRetryTimeCycle>
        <extension:field name="test" stringValue="test" expression="${test}">
          <extension:expression>${test}</extension:expression>
          <extension:string>test</extension:string>
        </extension:field>
      </extensionElements>
    </sendTask>

    <scriptTask id="scriptTask" scriptFormat="groovy" extension:resource="test.groovy" />

    <callActivity id="callActivity"
                  extension:calledElementBinding="test"
                  extension:calledElementVersion="test"
                  extension:calledElementVersionTag="test"
                  extension:calledElementTenantId="test"
                  extension:caseRef="test"
                  extension:caseBinding="test"
                  extension:caseVersion="test"
                  extension:caseTenantId="test"
                  extension:exclusive="false"
                  extension:variableMappingClass="org.test.test.Test"
                  extension:variableMappingDelegateExpression="${org.test.test.Test}">
      <extensionElements>
        <extension:in source="test" sourceExpression="${test}" variables="test" businessKey="${test}" target="test" local="true"/>
        <extension:out source="test" sourceExpression="${test}" variables="test" target="test" local="true"/>
      </extensionElements>
    </callActivity>

    <businessRuleTask id="businessRuleTask"
                      extension:decisionRef="test"
                      extension:decisionRefBinding="test"
                      extension:decisionRefVersion="test"
                      extension:decisionRefVersionTag="test"
                      extension:decisionRefTenantId="test"
                      extension:mapDecisionResult="test"
                      extension:taskPriority="test"/>

    <endEvent id="endEvent"
              extension:asyncAfter="true"
              extension:asyncBefore="true"
              extension:jobPriority="${test}">
      <extensionElements>
        <extension:properties>
          <extension:property name="name1" value="value1"/>
          <extension:property name="name2" value="value2"/>
        </extension:properties>
      </extensionElements>
      <messageEventDefinition
        extension:class="org.test.test.Test"
        extension:expression="${test}"
        extension:delegateExpression="${org.test.test.Test}"
        extension:resultVariable="test"
        extension:topic="test"
        extension:type="test" />
    </endEvent>

    <parallelGateway id="parallelGateway"
                     extension:async="true"
                     extension:asyncBefore="true"
                     extension:asyncAfter="true"
                     extension:jobPriority="${test}">

    </parallelGateway>
  </process>

  <error id="error" extension:errorMessage="test" />
</definitions>